// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PryanikHub;

#nullable disable

namespace PryanikHub.Migrations
{
    [DbContext(typeof(CoreDbContext))]
    partial class CoreDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PryanikHub.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ShippingDate")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "shippingDate");

                    b.Property<string>("Uid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "uid");

                    b.HasKey("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("PryanikHub.OrderLine", b =>
                {
                    b.Property<int>("OrderLineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderLineId"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "productId");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "quantity");

                    b.HasKey("OrderLineId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderLines");

                    b.HasAnnotation("Relational:JsonPropertyName", "orderLines");
                });

            modelBuilder.Entity("PryanikHub.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DetailedImagesRefs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreviewImageRef")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Description = "Lorem ipsum pryanik lopsum",
                            DetailedImagesRefs = "[\"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a2/Prjaniki.jpg/1200px-Prjaniki.jpg\",\"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a2/Prjaniki.jpg/1200px-Prjaniki.jpg\"]",
                            PreviewImageRef = "https://upload.wikimedia.org/wikipedia/commons/thumb/a/a2/Prjaniki.jpg/1200px-Prjaniki.jpg",
                            Title = "Pryanik#1"
                        },
                        new
                        {
                            ProductId = 2,
                            Description = "Lorem ipsum pryanik lopsum",
                            DetailedImagesRefs = "[\"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a2/Prjaniki.jpg/1200px-Prjaniki.jpg\",\"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a2/Prjaniki.jpg/1200px-Prjaniki.jpg\"]",
                            PreviewImageRef = "https://upload.wikimedia.org/wikipedia/commons/thumb/a/a2/Prjaniki.jpg/1200px-Prjaniki.jpg",
                            Title = "Pryanik#2"
                        });
                });

            modelBuilder.Entity("PryanikHub.Order", b =>
                {
                    b.HasOne("PryanikHub.Product", null)
                        .WithMany("Orders")
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("PryanikHub.OrderLine", b =>
                {
                    b.HasOne("PryanikHub.Order", "Order")
                        .WithMany("OrderLines")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PryanikHub.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("PryanikHub.Order", b =>
                {
                    b.Navigation("OrderLines");
                });

            modelBuilder.Entity("PryanikHub.Product", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
